
Esp8266.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000088  00800100  00000ade  00000b72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ade  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ac  00800188  00800188  00000bfa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bfa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ff7  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ed  00000000  00000000  00001d47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006d3  00000000  00000000  00002734  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00002e08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b7  00000000  00000000  00002ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000665  00000000  00000000  000036b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003d18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 96 01 	jmp	0x32c	; 0x32c <__vector_18>
  4c:	0c 94 c1 01 	jmp	0x382	; 0x382 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ed       	ldi	r30, 0xDE	; 222
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 38       	cpi	r26, 0x88	; 136
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a8 e8       	ldi	r26, 0x88	; 136
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 33       	cpi	r26, 0x34	; 52
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 1c 01 	call	0x238	; 0x238 <main>
  9e:	0c 94 6d 05 	jmp	0xada	; 0xada <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z11start_timerv>:
char response[100];
char c;

void start_timer()
{
	TCCR0A |= (1<<WGM01);
  a6:	84 b5       	in	r24, 0x24	; 36
  a8:	82 60       	ori	r24, 0x02	; 2
  aa:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS00)|(1<<CS02);
  ac:	85 b5       	in	r24, 0x25	; 37
  ae:	85 60       	ori	r24, 0x05	; 5
  b0:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<OCIE0A);
  b2:	ee e6       	ldi	r30, 0x6E	; 110
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	80 83       	st	Z, r24
	OCR0A = 156;		//1 centi seconds 	
  bc:	8c e9       	ldi	r24, 0x9C	; 156
  be:	87 bd       	out	0x27, r24	; 39
	TCNT0 = 0;
  c0:	16 bc       	out	0x26, r1	; 38
  c2:	08 95       	ret

000000c4 <_Z10stop_timerv>:
}

void stop_timer()
{
	TCCR0A=0;
  c4:	14 bc       	out	0x24, r1	; 36
	TCCR0B =0;
  c6:	15 bc       	out	0x25, r1	; 37
	TIMSK0 &= ~(1<<OCIE0A);
  c8:	ee e6       	ldi	r30, 0x6E	; 110
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	8d 7f       	andi	r24, 0xFD	; 253
  d0:	80 83       	st	Z, r24
	count = 0;
  d2:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <count+0x1>
  d6:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <count>
  da:	08 95       	ret

000000dc <_Z8sendDataPci>:
}

const char* sendData(char *command,const int timeout) //timeout in centi seconds
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	eb 01       	movw	r28, r22
	memset(response,'\0',100);
  e2:	24 e6       	ldi	r18, 0x64	; 100
  e4:	e9 e8       	ldi	r30, 0x89	; 137
  e6:	f1 e0       	ldi	r31, 0x01	; 1
  e8:	df 01       	movw	r26, r30
  ea:	1d 92       	st	X+, r1
  ec:	2a 95       	dec	r18
  ee:	e9 f7       	brne	.-6      	; 0xea <_Z8sendDataPci+0xe>
	uart0_puts(command);
  f0:	0e 94 34 02 	call	0x468	; 0x468 <_Z10uart0_putsPKc>
	start_timer();
  f4:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z11start_timerv>
	while(timeout >= count)
  f8:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <count>
  fc:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <count+0x1>
 100:	c8 17       	cp	r28, r24
 102:	d9 07       	cpc	r29, r25
 104:	7c f0       	brlt	.+30     	; 0x124 <_Z8sendDataPci+0x48>
	{
		while(uart0_available())
 106:	0e 94 43 02 	call	0x486	; 0x486 <_Z15uart0_availablev>
 10a:	89 2b       	or	r24, r25
 10c:	a9 f3       	breq	.-22     	; 0xf8 <_Z8sendDataPci+0x1c>
		{
			c = uart0_getc();
 10e:	0e 94 04 02 	call	0x408	; 0x408 <_Z10uart0_getcv>
 112:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <__data_end>
			strcat(response,&c);
 116:	68 e8       	ldi	r22, 0x88	; 136
 118:	71 e0       	ldi	r23, 0x01	; 1
 11a:	89 e8       	ldi	r24, 0x89	; 137
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <strcat>
	memset(response,'\0',100);
	uart0_puts(command);
	start_timer();
	while(timeout >= count)
	{
		while(uart0_available())
 122:	f1 cf       	rjmp	.-30     	; 0x106 <_Z8sendDataPci+0x2a>
		{
			c = uart0_getc();
			strcat(response,&c);
		}
	}
	stop_timer();
 124:	0e 94 62 00 	call	0xc4	; 0xc4 <_Z10stop_timerv>
	return response;
}
 128:	89 e8       	ldi	r24, 0x89	; 137
 12a:	91 e0       	ldi	r25, 0x01	; 1
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <_Z10initialisev>:


void initialise()
{
	uart0_init(UART_BAUD_SELECT(115200,F_CPU));
 132:	87 e0       	ldi	r24, 0x07	; 7
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z10uart0_initj>
	sei();
 13a:	78 94       	sei
	DDRB |= 0X38; //set pb3 pb4 and pb5 as a output pin
 13c:	84 b1       	in	r24, 0x04	; 4
 13e:	88 63       	ori	r24, 0x38	; 56
 140:	84 b9       	out	0x04, r24	; 4
	count = 0;
 142:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <count+0x1>
 146:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <count>
	sendData("AT+RST\r\n",200);
 14a:	68 ec       	ldi	r22, 0xC8	; 200
 14c:	70 e0       	ldi	r23, 0x00	; 0
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
	sendData("AT+CWJAP=\"Subash's Wifi\",\"bastain123\"\r\n",700);
 156:	6c eb       	ldi	r22, 0xBC	; 188
 158:	72 e0       	ldi	r23, 0x02	; 2
 15a:	89 e0       	ldi	r24, 0x09	; 9
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
	sendData("AT+CWMODE=3\r\n",200);
 162:	68 ec       	ldi	r22, 0xC8	; 200
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	81 e3       	ldi	r24, 0x31	; 49
 168:	91 e0       	ldi	r25, 0x01	; 1
 16a:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
	sendData("AT+CIFSR\r\n",200);
 16e:	68 ec       	ldi	r22, 0xC8	; 200
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	8f e3       	ldi	r24, 0x3F	; 63
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
	sendData("AT+CIPMUX=1\r\n",200);
 17a:	68 ec       	ldi	r22, 0xC8	; 200
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	8a e4       	ldi	r24, 0x4A	; 74
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
	sendData("AT+CIPSERVER=1,80\r\n",200);
 186:	68 ec       	ldi	r22, 0xC8	; 200
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	88 e5       	ldi	r24, 0x58	; 88
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
 192:	08 95       	ret

00000194 <_Z4findPc>:
}


bool find(char *substring)
{
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	8c 01       	movw	r16, r24
	uint8_t i;
	uint8_t length = strlen(substring);
 19e:	fc 01       	movw	r30, r24
 1a0:	01 90       	ld	r0, Z+
 1a2:	00 20       	and	r0, r0
 1a4:	e9 f7       	brne	.-6      	; 0x1a0 <_Z4findPc+0xc>
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	ef 01       	movw	r28, r30
 1aa:	c8 1b       	sub	r28, r24
 1ac:	d9 0b       	sbc	r29, r25
	memset(response,'\0',100);
 1ae:	84 e6       	ldi	r24, 0x64	; 100
 1b0:	e9 e8       	ldi	r30, 0x89	; 137
 1b2:	f1 e0       	ldi	r31, 0x01	; 1
 1b4:	df 01       	movw	r26, r30
 1b6:	1d 92       	st	X+, r1
 1b8:	8a 95       	dec	r24
 1ba:	e9 f7       	brne	.-6      	; 0x1b6 <_Z4findPc+0x22>
	bool search = false;
	while(uart0_available())
 1bc:	0e 94 43 02 	call	0x486	; 0x486 <_Z15uart0_availablev>
 1c0:	89 2b       	or	r24, r25
 1c2:	59 f0       	breq	.+22     	; 0x1da <_Z4findPc+0x46>
	{
		c = uart0_getc();
 1c4:	0e 94 04 02 	call	0x408	; 0x408 <_Z10uart0_getcv>
 1c8:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <__data_end>
		strcat(response,&c);
 1cc:	68 e8       	ldi	r22, 0x88	; 136
 1ce:	71 e0       	ldi	r23, 0x01	; 1
 1d0:	89 e8       	ldi	r24, 0x89	; 137
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	0e 94 78 02 	call	0x4f0	; 0x4f0 <strcat>
{
	uint8_t i;
	uint8_t length = strlen(substring);
	memset(response,'\0',100);
	bool search = false;
	while(uart0_available())
 1d8:	f1 cf       	rjmp	.-30     	; 0x1bc <_Z4findPc+0x28>
	{
		c = uart0_getc();
		strcat(response,&c);
	}
	if (response[0] != '\0')
 1da:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <response>
 1de:	88 23       	and	r24, r24
 1e0:	29 f1       	breq	.+74     	; 0x22c <_Z4findPc+0x98>
	{
		for(i=0;i<strlen(response);i++)
 1e2:	e9 e8       	ldi	r30, 0x89	; 137
 1e4:	f1 e0       	ldi	r31, 0x01	; 1
 1e6:	01 90       	ld	r0, Z+
 1e8:	00 20       	and	r0, r0
 1ea:	e9 f7       	brne	.-6      	; 0x1e6 <_Z4findPc+0x52>
 1ec:	31 97       	sbiw	r30, 0x01	; 1
 1ee:	af 01       	movw	r20, r30
 1f0:	49 58       	subi	r20, 0x89	; 137
 1f2:	51 40       	sbci	r21, 0x01	; 1
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	83 2f       	mov	r24, r19
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	84 17       	cp	r24, r20
 1fc:	95 07       	cpc	r25, r21
 1fe:	b0 f4       	brcc	.+44     	; 0x22c <_Z4findPc+0x98>
		{
			for(uint8_t j=0;j<length;j++)
 200:	cc 23       	and	r28, r28
 202:	91 f0       	breq	.+36     	; 0x228 <_Z4findPc+0x94>
			{
				if (substring[j] == response[i])
 204:	f8 01       	movw	r30, r16
 206:	20 81       	ld	r18, Z
 208:	fc 01       	movw	r30, r24
 20a:	e7 57       	subi	r30, 0x77	; 119
 20c:	fe 4f       	sbci	r31, 0xFE	; 254
 20e:	80 81       	ld	r24, Z
 210:	28 13       	cpse	r18, r24
 212:	0a c0       	rjmp	.+20     	; 0x228 <_Z4findPc+0x94>
 214:	f8 01       	movw	r30, r16
 216:	31 96       	adiw	r30, 0x01	; 1
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	03 c0       	rjmp	.+6      	; 0x222 <_Z4findPc+0x8e>
 21c:	91 91       	ld	r25, Z+
 21e:	92 13       	cpse	r25, r18
 220:	03 c0       	rjmp	.+6      	; 0x228 <_Z4findPc+0x94>
	}
	if (response[0] != '\0')
	{
		for(i=0;i<strlen(response);i++)
		{
			for(uint8_t j=0;j<length;j++)
 222:	8f 5f       	subi	r24, 0xFF	; 255
 224:	c8 13       	cpse	r28, r24
 226:	fa cf       	rjmp	.-12     	; 0x21c <_Z4findPc+0x88>
		c = uart0_getc();
		strcat(response,&c);
	}
	if (response[0] != '\0')
	{
		for(i=0;i<strlen(response);i++)
 228:	3f 5f       	subi	r19, 0xFF	; 255
 22a:	e5 cf       	rjmp	.-54     	; 0x1f6 <_Z4findPc+0x62>
				search = true;
			}
		}
	}
	return search;
}
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	1f 91       	pop	r17
 234:	0f 91       	pop	r16
 236:	08 95       	ret

00000238 <main>:

int main()
{
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	6e 97       	sbiw	r28, 0x1e	; 30
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	de bf       	out	0x3e, r29	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	cd bf       	out	0x3d, r28	; 61
	initialise();	
 24c:	0e 94 99 00 	call	0x132	; 0x132 <_Z10initialisev>
			int pinnumber = (uart0_getc()-48)*10;
			pinnumber += (uart0_getc()-48);
			if (pinnumber == 13)
				PORTB = 0X20;
			else if(pinnumber == 12)
				PORTB = 0X10;
 250:	68 94       	set
 252:	88 24       	eor	r8, r8
 254:	84 f8       	bld	r8, 4
			int connectionId = uart0_getc()-48;
			find("pin=");
			int pinnumber = (uart0_getc()-48)*10;
			pinnumber += (uart0_getc()-48);
			if (pinnumber == 13)
				PORTB = 0X20;
 256:	68 94       	set
 258:	99 24       	eor	r9, r9
 25a:	95 f8       	bld	r9, 5
			else if(pinnumber == 12)
				PORTB = 0X10;
			char closecommand[30];
			sprintf(closecommand,"AT+CIPCLOSE=%d\r\n",connectionId);
 25c:	0f 2e       	mov	r0, r31
 25e:	f6 e7       	ldi	r31, 0x76	; 118
 260:	af 2e       	mov	r10, r31
 262:	f1 e0       	ldi	r31, 0x01	; 1
 264:	bf 2e       	mov	r11, r31
 266:	f0 2d       	mov	r31, r0
 268:	ce 01       	movw	r24, r28
 26a:	01 96       	adiw	r24, 0x01	; 1
 26c:	6c 01       	movw	r12, r24
int main()
{
	initialise();	
	while(1)
	{
		if (find("+IPD"))
 26e:	8c e6       	ldi	r24, 0x6C	; 108
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	0e 94 ca 00 	call	0x194	; 0x194 <_Z4findPc>
 276:	88 23       	and	r24, r24
 278:	d1 f3       	breq	.-12     	; 0x26e <main+0x36>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27a:	9f ef       	ldi	r25, 0xFF	; 255
 27c:	23 ed       	ldi	r18, 0xD3	; 211
 27e:	80 e3       	ldi	r24, 0x30	; 48
 280:	91 50       	subi	r25, 0x01	; 1
 282:	20 40       	sbci	r18, 0x00	; 0
 284:	80 40       	sbci	r24, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <main+0x48>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x52>
 28a:	00 00       	nop
		{
			_delay_ms(1000);
			int connectionId = uart0_getc()-48;
 28c:	0e 94 04 02 	call	0x408	; 0x408 <_Z10uart0_getcv>
 290:	c0 97       	sbiw	r24, 0x30	; 48
 292:	7c 01       	movw	r14, r24
			find("pin=");
 294:	81 e7       	ldi	r24, 0x71	; 113
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	0e 94 ca 00 	call	0x194	; 0x194 <_Z4findPc>
			int pinnumber = (uart0_getc()-48)*10;
 29c:	0e 94 04 02 	call	0x408	; 0x408 <_Z10uart0_getcv>
 2a0:	8c 01       	movw	r16, r24
			pinnumber += (uart0_getc()-48);
 2a2:	0e 94 04 02 	call	0x408	; 0x408 <_Z10uart0_getcv>
 2a6:	98 01       	movw	r18, r16
 2a8:	22 0f       	add	r18, r18
 2aa:	33 1f       	adc	r19, r19
 2ac:	00 0f       	add	r16, r16
 2ae:	11 1f       	adc	r17, r17
 2b0:	00 0f       	add	r16, r16
 2b2:	11 1f       	adc	r17, r17
 2b4:	00 0f       	add	r16, r16
 2b6:	11 1f       	adc	r17, r17
 2b8:	02 0f       	add	r16, r18
 2ba:	13 1f       	adc	r17, r19
 2bc:	80 51       	subi	r24, 0x10	; 16
 2be:	92 40       	sbci	r25, 0x02	; 2
 2c0:	08 0f       	add	r16, r24
 2c2:	19 1f       	adc	r17, r25
			if (pinnumber == 13)
 2c4:	0d 30       	cpi	r16, 0x0D	; 13
 2c6:	11 05       	cpc	r17, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <main+0x96>
				PORTB = 0X20;
 2ca:	95 b8       	out	0x05, r9	; 5
 2cc:	04 c0       	rjmp	.+8      	; 0x2d6 <main+0x9e>
			else if(pinnumber == 12)
 2ce:	0c 30       	cpi	r16, 0x0C	; 12
 2d0:	11 05       	cpc	r17, r1
 2d2:	09 f4       	brne	.+2      	; 0x2d6 <main+0x9e>
				PORTB = 0X10;
 2d4:	85 b8       	out	0x05, r8	; 5
			char closecommand[30];
			sprintf(closecommand,"AT+CIPCLOSE=%d\r\n",connectionId);
 2d6:	ff 92       	push	r15
 2d8:	ef 92       	push	r14
 2da:	bf 92       	push	r11
 2dc:	af 92       	push	r10
 2de:	df 92       	push	r13
 2e0:	cf 92       	push	r12
 2e2:	0e 94 83 02 	call	0x506	; 0x506 <sprintf>
			sendData(closecommand,100);	
 2e6:	64 e6       	ldi	r22, 0x64	; 100
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	c6 01       	movw	r24, r12
 2ec:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8sendDataPci>
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	b8 cf       	rjmp	.-144    	; 0x26e <main+0x36>

000002fe <__vector_14>:
	}

}

ISR(TIMER0_COMPA_vect)
{
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	8f 93       	push	r24
 30a:	9f 93       	push	r25
	count++;
 30c:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <count>
 310:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <count+0x1>
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	90 93 ee 01 	sts	0x01EE, r25	; 0x8001ee <count+0x1>
 31a:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <count>
 31e:	9f 91       	pop	r25
 320:	8f 91       	pop	r24
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <__vector_18>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
 32c:	1f 92       	push	r1
 32e:	0f 92       	push	r0
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	2f 93       	push	r18
 338:	8f 93       	push	r24
 33a:	9f 93       	push	r25
 33c:	ef 93       	push	r30
 33e:	ff 93       	push	r31
 340:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 344:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 348:	88 71       	andi	r24, 0x18	; 24
 34a:	e0 91 f1 01 	lds	r30, 0x01F1	; 0x8001f1 <_ZL12UART0_RxHead>
 34e:	ef 5f       	subi	r30, 0xFF	; 255
 350:	ef 71       	andi	r30, 0x1F	; 31
 352:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <_ZL12UART0_RxTail>
 356:	e9 17       	cp	r30, r25
 358:	39 f0       	breq	.+14     	; 0x368 <__vector_18+0x3c>
 35a:	e0 93 f1 01 	sts	0x01F1, r30	; 0x8001f1 <_ZL12UART0_RxHead>
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	ec 50       	subi	r30, 0x0C	; 12
 362:	fe 4f       	sbci	r31, 0xFE	; 254
 364:	20 83       	st	Z, r18
 366:	01 c0       	rjmp	.+2      	; 0x36a <__vector_18+0x3e>
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <_ZL17UART0_LastRxError>
 36e:	ff 91       	pop	r31
 370:	ef 91       	pop	r30
 372:	9f 91       	pop	r25
 374:	8f 91       	pop	r24
 376:	2f 91       	pop	r18
 378:	0f 90       	pop	r0
 37a:	0f be       	out	0x3f, r0	; 63
 37c:	0f 90       	pop	r0
 37e:	1f 90       	pop	r1
 380:	18 95       	reti

00000382 <__vector_19>:
 382:	1f 92       	push	r1
 384:	0f 92       	push	r0
 386:	0f b6       	in	r0, 0x3f	; 63
 388:	0f 92       	push	r0
 38a:	11 24       	eor	r1, r1
 38c:	8f 93       	push	r24
 38e:	9f 93       	push	r25
 390:	ef 93       	push	r30
 392:	ff 93       	push	r31
 394:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <_ZL12UART0_TxHead>
 398:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <_ZL12UART0_TxTail>
 39c:	98 17       	cp	r25, r24
 39e:	69 f0       	breq	.+26     	; 0x3ba <__vector_19+0x38>
 3a0:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <_ZL12UART0_TxTail>
 3a4:	ef 5f       	subi	r30, 0xFF	; 255
 3a6:	ef 71       	andi	r30, 0x1F	; 31
 3a8:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <_ZL12UART0_TxTail>
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	ec 5e       	subi	r30, 0xEC	; 236
 3b0:	fd 4f       	sbci	r31, 0xFD	; 253
 3b2:	80 81       	ld	r24, Z
 3b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3b8:	05 c0       	rjmp	.+10     	; 0x3c4 <__vector_19+0x42>
 3ba:	e1 ec       	ldi	r30, 0xC1	; 193
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	8f 7d       	andi	r24, 0xDF	; 223
 3c2:	80 83       	st	Z, r24
 3c4:	ff 91       	pop	r31
 3c6:	ef 91       	pop	r30
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	0f 90       	pop	r0
 3ce:	0f be       	out	0x3f, r0	; 63
 3d0:	0f 90       	pop	r0
 3d2:	1f 90       	pop	r1
 3d4:	18 95       	reti

000003d6 <_Z10uart0_initj>:
 3d6:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <_ZL12UART0_TxHead>
 3da:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <_ZL12UART0_TxTail>
 3de:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <_ZL12UART0_RxHead>
 3e2:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <_ZL12UART0_RxTail>
 3e6:	99 23       	and	r25, r25
 3e8:	24 f4       	brge	.+8      	; 0x3f2 <_Z10uart0_initj+0x1c>
 3ea:	22 e0       	ldi	r18, 0x02	; 2
 3ec:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 3f0:	9f 77       	andi	r25, 0x7F	; 127
 3f2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 3f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 3fa:	88 e9       	ldi	r24, 0x98	; 152
 3fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 400:	86 e0       	ldi	r24, 0x06	; 6
 402:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 406:	08 95       	ret

00000408 <_Z10uart0_getcv>:
 408:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <_ZL12UART0_RxHead>
 40c:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <_ZL12UART0_RxTail>
 410:	98 17       	cp	r25, r24
 412:	91 f0       	breq	.+36     	; 0x438 <_Z10uart0_getcv+0x30>
 414:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <_ZL12UART0_RxTail>
 418:	ef 5f       	subi	r30, 0xFF	; 255
 41a:	ef 71       	andi	r30, 0x1F	; 31
 41c:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <_ZL12UART0_RxTail>
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	ec 50       	subi	r30, 0x0C	; 12
 424:	fe 4f       	sbci	r31, 0xFE	; 254
 426:	20 81       	ld	r18, Z
 428:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <_ZL17UART0_LastRxError>
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	98 2f       	mov	r25, r24
 430:	88 27       	eor	r24, r24
 432:	82 0f       	add	r24, r18
 434:	91 1d       	adc	r25, r1
 436:	08 95       	ret
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	08 95       	ret

0000043e <_Z10uart0_putch>:
 43e:	20 91 f3 01 	lds	r18, 0x01F3	; 0x8001f3 <_ZL12UART0_TxHead>
 442:	2f 5f       	subi	r18, 0xFF	; 255
 444:	2f 71       	andi	r18, 0x1F	; 31
 446:	90 91 f2 01 	lds	r25, 0x01F2	; 0x8001f2 <_ZL12UART0_TxTail>
 44a:	29 17       	cp	r18, r25
 44c:	e1 f3       	breq	.-8      	; 0x446 <_Z10uart0_putch+0x8>
 44e:	e2 2f       	mov	r30, r18
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	ec 5e       	subi	r30, 0xEC	; 236
 454:	fd 4f       	sbci	r31, 0xFD	; 253
 456:	80 83       	st	Z, r24
 458:	20 93 f3 01 	sts	0x01F3, r18	; 0x8001f3 <_ZL12UART0_TxHead>
 45c:	e1 ec       	ldi	r30, 0xC1	; 193
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	80 81       	ld	r24, Z
 462:	80 62       	ori	r24, 0x20	; 32
 464:	80 83       	st	Z, r24
 466:	08 95       	ret

00000468 <_Z10uart0_putsPKc>:
 468:	cf 93       	push	r28
 46a:	df 93       	push	r29
 46c:	ec 01       	movw	r28, r24
 46e:	88 81       	ld	r24, Y
 470:	88 23       	and	r24, r24
 472:	31 f0       	breq	.+12     	; 0x480 <_Z10uart0_putsPKc+0x18>
 474:	21 96       	adiw	r28, 0x01	; 1
 476:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z10uart0_putch>
 47a:	89 91       	ld	r24, Y+
 47c:	81 11       	cpse	r24, r1
 47e:	fb cf       	rjmp	.-10     	; 0x476 <_Z10uart0_putsPKc+0xe>
 480:	df 91       	pop	r29
 482:	cf 91       	pop	r28
 484:	08 95       	ret

00000486 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
 486:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <_ZL12UART0_RxHead>
 48a:	20 91 f0 01 	lds	r18, 0x01F0	; 0x8001f0 <_ZL12UART0_RxTail>
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	4f 96       	adiw	r24, 0x1f	; 31
 492:	82 1b       	sub	r24, r18
 494:	91 09       	sbc	r25, r1
 496:	6f e1       	ldi	r22, 0x1F	; 31
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__divmodhi4>
}/* uart_available */
 49e:	08 95       	ret

000004a0 <__divmodhi4>:
 4a0:	97 fb       	bst	r25, 7
 4a2:	07 2e       	mov	r0, r23
 4a4:	16 f4       	brtc	.+4      	; 0x4aa <__divmodhi4+0xa>
 4a6:	00 94       	com	r0
 4a8:	07 d0       	rcall	.+14     	; 0x4b8 <__divmodhi4_neg1>
 4aa:	77 fd       	sbrc	r23, 7
 4ac:	09 d0       	rcall	.+18     	; 0x4c0 <__divmodhi4_neg2>
 4ae:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__udivmodhi4>
 4b2:	07 fc       	sbrc	r0, 7
 4b4:	05 d0       	rcall	.+10     	; 0x4c0 <__divmodhi4_neg2>
 4b6:	3e f4       	brtc	.+14     	; 0x4c6 <__divmodhi4_exit>

000004b8 <__divmodhi4_neg1>:
 4b8:	90 95       	com	r25
 4ba:	81 95       	neg	r24
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	08 95       	ret

000004c0 <__divmodhi4_neg2>:
 4c0:	70 95       	com	r23
 4c2:	61 95       	neg	r22
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255

000004c6 <__divmodhi4_exit>:
 4c6:	08 95       	ret

000004c8 <__udivmodhi4>:
 4c8:	aa 1b       	sub	r26, r26
 4ca:	bb 1b       	sub	r27, r27
 4cc:	51 e1       	ldi	r21, 0x11	; 17
 4ce:	07 c0       	rjmp	.+14     	; 0x4de <__udivmodhi4_ep>

000004d0 <__udivmodhi4_loop>:
 4d0:	aa 1f       	adc	r26, r26
 4d2:	bb 1f       	adc	r27, r27
 4d4:	a6 17       	cp	r26, r22
 4d6:	b7 07       	cpc	r27, r23
 4d8:	10 f0       	brcs	.+4      	; 0x4de <__udivmodhi4_ep>
 4da:	a6 1b       	sub	r26, r22
 4dc:	b7 0b       	sbc	r27, r23

000004de <__udivmodhi4_ep>:
 4de:	88 1f       	adc	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	5a 95       	dec	r21
 4e4:	a9 f7       	brne	.-22     	; 0x4d0 <__udivmodhi4_loop>
 4e6:	80 95       	com	r24
 4e8:	90 95       	com	r25
 4ea:	bc 01       	movw	r22, r24
 4ec:	cd 01       	movw	r24, r26
 4ee:	08 95       	ret

000004f0 <strcat>:
 4f0:	fb 01       	movw	r30, r22
 4f2:	dc 01       	movw	r26, r24
 4f4:	0d 90       	ld	r0, X+
 4f6:	00 20       	and	r0, r0
 4f8:	e9 f7       	brne	.-6      	; 0x4f4 <strcat+0x4>
 4fa:	11 97       	sbiw	r26, 0x01	; 1
 4fc:	01 90       	ld	r0, Z+
 4fe:	0d 92       	st	X+, r0
 500:	00 20       	and	r0, r0
 502:	e1 f7       	brne	.-8      	; 0x4fc <strcat+0xc>
 504:	08 95       	ret

00000506 <sprintf>:
 506:	ae e0       	ldi	r26, 0x0E	; 14
 508:	b0 e0       	ldi	r27, 0x00	; 0
 50a:	e9 e8       	ldi	r30, 0x89	; 137
 50c:	f2 e0       	ldi	r31, 0x02	; 2
 50e:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__prologue_saves__+0x1c>
 512:	0d 89       	ldd	r16, Y+21	; 0x15
 514:	1e 89       	ldd	r17, Y+22	; 0x16
 516:	86 e0       	ldi	r24, 0x06	; 6
 518:	8c 83       	std	Y+4, r24	; 0x04
 51a:	1a 83       	std	Y+2, r17	; 0x02
 51c:	09 83       	std	Y+1, r16	; 0x01
 51e:	8f ef       	ldi	r24, 0xFF	; 255
 520:	9f e7       	ldi	r25, 0x7F	; 127
 522:	9e 83       	std	Y+6, r25	; 0x06
 524:	8d 83       	std	Y+5, r24	; 0x05
 526:	ae 01       	movw	r20, r28
 528:	47 5e       	subi	r20, 0xE7	; 231
 52a:	5f 4f       	sbci	r21, 0xFF	; 255
 52c:	6f 89       	ldd	r22, Y+23	; 0x17
 52e:	78 8d       	ldd	r23, Y+24	; 0x18
 530:	ce 01       	movw	r24, r28
 532:	01 96       	adiw	r24, 0x01	; 1
 534:	0e 94 a5 02 	call	0x54a	; 0x54a <vfprintf>
 538:	ef 81       	ldd	r30, Y+7	; 0x07
 53a:	f8 85       	ldd	r31, Y+8	; 0x08
 53c:	e0 0f       	add	r30, r16
 53e:	f1 1f       	adc	r31, r17
 540:	10 82       	st	Z, r1
 542:	2e 96       	adiw	r28, 0x0e	; 14
 544:	e4 e0       	ldi	r30, 0x04	; 4
 546:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__epilogue_restores__+0x1c>

0000054a <vfprintf>:
 54a:	ab e0       	ldi	r26, 0x0B	; 11
 54c:	b0 e0       	ldi	r27, 0x00	; 0
 54e:	eb ea       	ldi	r30, 0xAB	; 171
 550:	f2 e0       	ldi	r31, 0x02	; 2
 552:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__prologue_saves__>
 556:	6c 01       	movw	r12, r24
 558:	7b 01       	movw	r14, r22
 55a:	8a 01       	movw	r16, r20
 55c:	fc 01       	movw	r30, r24
 55e:	17 82       	std	Z+7, r1	; 0x07
 560:	16 82       	std	Z+6, r1	; 0x06
 562:	83 81       	ldd	r24, Z+3	; 0x03
 564:	81 ff       	sbrs	r24, 1
 566:	cc c1       	rjmp	.+920    	; 0x900 <__stack+0x1>
 568:	ce 01       	movw	r24, r28
 56a:	01 96       	adiw	r24, 0x01	; 1
 56c:	3c 01       	movw	r6, r24
 56e:	f6 01       	movw	r30, r12
 570:	93 81       	ldd	r25, Z+3	; 0x03
 572:	f7 01       	movw	r30, r14
 574:	93 fd       	sbrc	r25, 3
 576:	85 91       	lpm	r24, Z+
 578:	93 ff       	sbrs	r25, 3
 57a:	81 91       	ld	r24, Z+
 57c:	7f 01       	movw	r14, r30
 57e:	88 23       	and	r24, r24
 580:	09 f4       	brne	.+2      	; 0x584 <vfprintf+0x3a>
 582:	ba c1       	rjmp	.+884    	; 0x8f8 <vfprintf+0x3ae>
 584:	85 32       	cpi	r24, 0x25	; 37
 586:	39 f4       	brne	.+14     	; 0x596 <vfprintf+0x4c>
 588:	93 fd       	sbrc	r25, 3
 58a:	85 91       	lpm	r24, Z+
 58c:	93 ff       	sbrs	r25, 3
 58e:	81 91       	ld	r24, Z+
 590:	7f 01       	movw	r14, r30
 592:	85 32       	cpi	r24, 0x25	; 37
 594:	29 f4       	brne	.+10     	; 0x5a0 <vfprintf+0x56>
 596:	b6 01       	movw	r22, r12
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 59e:	e7 cf       	rjmp	.-50     	; 0x56e <vfprintf+0x24>
 5a0:	91 2c       	mov	r9, r1
 5a2:	21 2c       	mov	r2, r1
 5a4:	31 2c       	mov	r3, r1
 5a6:	ff e1       	ldi	r31, 0x1F	; 31
 5a8:	f3 15       	cp	r31, r3
 5aa:	d8 f0       	brcs	.+54     	; 0x5e2 <vfprintf+0x98>
 5ac:	8b 32       	cpi	r24, 0x2B	; 43
 5ae:	79 f0       	breq	.+30     	; 0x5ce <vfprintf+0x84>
 5b0:	38 f4       	brcc	.+14     	; 0x5c0 <vfprintf+0x76>
 5b2:	80 32       	cpi	r24, 0x20	; 32
 5b4:	79 f0       	breq	.+30     	; 0x5d4 <vfprintf+0x8a>
 5b6:	83 32       	cpi	r24, 0x23	; 35
 5b8:	a1 f4       	brne	.+40     	; 0x5e2 <vfprintf+0x98>
 5ba:	23 2d       	mov	r18, r3
 5bc:	20 61       	ori	r18, 0x10	; 16
 5be:	1d c0       	rjmp	.+58     	; 0x5fa <vfprintf+0xb0>
 5c0:	8d 32       	cpi	r24, 0x2D	; 45
 5c2:	61 f0       	breq	.+24     	; 0x5dc <vfprintf+0x92>
 5c4:	80 33       	cpi	r24, 0x30	; 48
 5c6:	69 f4       	brne	.+26     	; 0x5e2 <vfprintf+0x98>
 5c8:	23 2d       	mov	r18, r3
 5ca:	21 60       	ori	r18, 0x01	; 1
 5cc:	16 c0       	rjmp	.+44     	; 0x5fa <vfprintf+0xb0>
 5ce:	83 2d       	mov	r24, r3
 5d0:	82 60       	ori	r24, 0x02	; 2
 5d2:	38 2e       	mov	r3, r24
 5d4:	e3 2d       	mov	r30, r3
 5d6:	e4 60       	ori	r30, 0x04	; 4
 5d8:	3e 2e       	mov	r3, r30
 5da:	2a c0       	rjmp	.+84     	; 0x630 <vfprintf+0xe6>
 5dc:	f3 2d       	mov	r31, r3
 5de:	f8 60       	ori	r31, 0x08	; 8
 5e0:	1d c0       	rjmp	.+58     	; 0x61c <vfprintf+0xd2>
 5e2:	37 fc       	sbrc	r3, 7
 5e4:	2d c0       	rjmp	.+90     	; 0x640 <vfprintf+0xf6>
 5e6:	20 ed       	ldi	r18, 0xD0	; 208
 5e8:	28 0f       	add	r18, r24
 5ea:	2a 30       	cpi	r18, 0x0A	; 10
 5ec:	40 f0       	brcs	.+16     	; 0x5fe <vfprintf+0xb4>
 5ee:	8e 32       	cpi	r24, 0x2E	; 46
 5f0:	b9 f4       	brne	.+46     	; 0x620 <vfprintf+0xd6>
 5f2:	36 fc       	sbrc	r3, 6
 5f4:	81 c1       	rjmp	.+770    	; 0x8f8 <vfprintf+0x3ae>
 5f6:	23 2d       	mov	r18, r3
 5f8:	20 64       	ori	r18, 0x40	; 64
 5fa:	32 2e       	mov	r3, r18
 5fc:	19 c0       	rjmp	.+50     	; 0x630 <vfprintf+0xe6>
 5fe:	36 fe       	sbrs	r3, 6
 600:	06 c0       	rjmp	.+12     	; 0x60e <vfprintf+0xc4>
 602:	8a e0       	ldi	r24, 0x0A	; 10
 604:	98 9e       	mul	r9, r24
 606:	20 0d       	add	r18, r0
 608:	11 24       	eor	r1, r1
 60a:	92 2e       	mov	r9, r18
 60c:	11 c0       	rjmp	.+34     	; 0x630 <vfprintf+0xe6>
 60e:	ea e0       	ldi	r30, 0x0A	; 10
 610:	2e 9e       	mul	r2, r30
 612:	20 0d       	add	r18, r0
 614:	11 24       	eor	r1, r1
 616:	22 2e       	mov	r2, r18
 618:	f3 2d       	mov	r31, r3
 61a:	f0 62       	ori	r31, 0x20	; 32
 61c:	3f 2e       	mov	r3, r31
 61e:	08 c0       	rjmp	.+16     	; 0x630 <vfprintf+0xe6>
 620:	8c 36       	cpi	r24, 0x6C	; 108
 622:	21 f4       	brne	.+8      	; 0x62c <vfprintf+0xe2>
 624:	83 2d       	mov	r24, r3
 626:	80 68       	ori	r24, 0x80	; 128
 628:	38 2e       	mov	r3, r24
 62a:	02 c0       	rjmp	.+4      	; 0x630 <vfprintf+0xe6>
 62c:	88 36       	cpi	r24, 0x68	; 104
 62e:	41 f4       	brne	.+16     	; 0x640 <vfprintf+0xf6>
 630:	f7 01       	movw	r30, r14
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	7f 01       	movw	r14, r30
 63c:	81 11       	cpse	r24, r1
 63e:	b3 cf       	rjmp	.-154    	; 0x5a6 <vfprintf+0x5c>
 640:	98 2f       	mov	r25, r24
 642:	9f 7d       	andi	r25, 0xDF	; 223
 644:	95 54       	subi	r25, 0x45	; 69
 646:	93 30       	cpi	r25, 0x03	; 3
 648:	28 f4       	brcc	.+10     	; 0x654 <vfprintf+0x10a>
 64a:	0c 5f       	subi	r16, 0xFC	; 252
 64c:	1f 4f       	sbci	r17, 0xFF	; 255
 64e:	9f e3       	ldi	r25, 0x3F	; 63
 650:	99 83       	std	Y+1, r25	; 0x01
 652:	0d c0       	rjmp	.+26     	; 0x66e <vfprintf+0x124>
 654:	83 36       	cpi	r24, 0x63	; 99
 656:	31 f0       	breq	.+12     	; 0x664 <vfprintf+0x11a>
 658:	83 37       	cpi	r24, 0x73	; 115
 65a:	71 f0       	breq	.+28     	; 0x678 <vfprintf+0x12e>
 65c:	83 35       	cpi	r24, 0x53	; 83
 65e:	09 f0       	breq	.+2      	; 0x662 <vfprintf+0x118>
 660:	59 c0       	rjmp	.+178    	; 0x714 <vfprintf+0x1ca>
 662:	21 c0       	rjmp	.+66     	; 0x6a6 <vfprintf+0x15c>
 664:	f8 01       	movw	r30, r16
 666:	80 81       	ld	r24, Z
 668:	89 83       	std	Y+1, r24	; 0x01
 66a:	0e 5f       	subi	r16, 0xFE	; 254
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	88 24       	eor	r8, r8
 670:	83 94       	inc	r8
 672:	91 2c       	mov	r9, r1
 674:	53 01       	movw	r10, r6
 676:	13 c0       	rjmp	.+38     	; 0x69e <vfprintf+0x154>
 678:	28 01       	movw	r4, r16
 67a:	f2 e0       	ldi	r31, 0x02	; 2
 67c:	4f 0e       	add	r4, r31
 67e:	51 1c       	adc	r5, r1
 680:	f8 01       	movw	r30, r16
 682:	a0 80       	ld	r10, Z
 684:	b1 80       	ldd	r11, Z+1	; 0x01
 686:	36 fe       	sbrs	r3, 6
 688:	03 c0       	rjmp	.+6      	; 0x690 <vfprintf+0x146>
 68a:	69 2d       	mov	r22, r9
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	02 c0       	rjmp	.+4      	; 0x694 <vfprintf+0x14a>
 690:	6f ef       	ldi	r22, 0xFF	; 255
 692:	7f ef       	ldi	r23, 0xFF	; 255
 694:	c5 01       	movw	r24, r10
 696:	0e 94 91 04 	call	0x922	; 0x922 <strnlen>
 69a:	4c 01       	movw	r8, r24
 69c:	82 01       	movw	r16, r4
 69e:	f3 2d       	mov	r31, r3
 6a0:	ff 77       	andi	r31, 0x7F	; 127
 6a2:	3f 2e       	mov	r3, r31
 6a4:	16 c0       	rjmp	.+44     	; 0x6d2 <vfprintf+0x188>
 6a6:	28 01       	movw	r4, r16
 6a8:	22 e0       	ldi	r18, 0x02	; 2
 6aa:	42 0e       	add	r4, r18
 6ac:	51 1c       	adc	r5, r1
 6ae:	f8 01       	movw	r30, r16
 6b0:	a0 80       	ld	r10, Z
 6b2:	b1 80       	ldd	r11, Z+1	; 0x01
 6b4:	36 fe       	sbrs	r3, 6
 6b6:	03 c0       	rjmp	.+6      	; 0x6be <vfprintf+0x174>
 6b8:	69 2d       	mov	r22, r9
 6ba:	70 e0       	ldi	r23, 0x00	; 0
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <vfprintf+0x178>
 6be:	6f ef       	ldi	r22, 0xFF	; 255
 6c0:	7f ef       	ldi	r23, 0xFF	; 255
 6c2:	c5 01       	movw	r24, r10
 6c4:	0e 94 86 04 	call	0x90c	; 0x90c <strnlen_P>
 6c8:	4c 01       	movw	r8, r24
 6ca:	f3 2d       	mov	r31, r3
 6cc:	f0 68       	ori	r31, 0x80	; 128
 6ce:	3f 2e       	mov	r3, r31
 6d0:	82 01       	movw	r16, r4
 6d2:	33 fc       	sbrc	r3, 3
 6d4:	1b c0       	rjmp	.+54     	; 0x70c <vfprintf+0x1c2>
 6d6:	82 2d       	mov	r24, r2
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	88 16       	cp	r8, r24
 6dc:	99 06       	cpc	r9, r25
 6de:	b0 f4       	brcc	.+44     	; 0x70c <vfprintf+0x1c2>
 6e0:	b6 01       	movw	r22, r12
 6e2:	80 e2       	ldi	r24, 0x20	; 32
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 6ea:	2a 94       	dec	r2
 6ec:	f4 cf       	rjmp	.-24     	; 0x6d6 <vfprintf+0x18c>
 6ee:	f5 01       	movw	r30, r10
 6f0:	37 fc       	sbrc	r3, 7
 6f2:	85 91       	lpm	r24, Z+
 6f4:	37 fe       	sbrs	r3, 7
 6f6:	81 91       	ld	r24, Z+
 6f8:	5f 01       	movw	r10, r30
 6fa:	b6 01       	movw	r22, r12
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 702:	21 10       	cpse	r2, r1
 704:	2a 94       	dec	r2
 706:	21 e0       	ldi	r18, 0x01	; 1
 708:	82 1a       	sub	r8, r18
 70a:	91 08       	sbc	r9, r1
 70c:	81 14       	cp	r8, r1
 70e:	91 04       	cpc	r9, r1
 710:	71 f7       	brne	.-36     	; 0x6ee <vfprintf+0x1a4>
 712:	e8 c0       	rjmp	.+464    	; 0x8e4 <vfprintf+0x39a>
 714:	84 36       	cpi	r24, 0x64	; 100
 716:	11 f0       	breq	.+4      	; 0x71c <vfprintf+0x1d2>
 718:	89 36       	cpi	r24, 0x69	; 105
 71a:	41 f5       	brne	.+80     	; 0x76c <vfprintf+0x222>
 71c:	f8 01       	movw	r30, r16
 71e:	37 fe       	sbrs	r3, 7
 720:	07 c0       	rjmp	.+14     	; 0x730 <vfprintf+0x1e6>
 722:	60 81       	ld	r22, Z
 724:	71 81       	ldd	r23, Z+1	; 0x01
 726:	82 81       	ldd	r24, Z+2	; 0x02
 728:	93 81       	ldd	r25, Z+3	; 0x03
 72a:	0c 5f       	subi	r16, 0xFC	; 252
 72c:	1f 4f       	sbci	r17, 0xFF	; 255
 72e:	08 c0       	rjmp	.+16     	; 0x740 <vfprintf+0x1f6>
 730:	60 81       	ld	r22, Z
 732:	71 81       	ldd	r23, Z+1	; 0x01
 734:	07 2e       	mov	r0, r23
 736:	00 0c       	add	r0, r0
 738:	88 0b       	sbc	r24, r24
 73a:	99 0b       	sbc	r25, r25
 73c:	0e 5f       	subi	r16, 0xFE	; 254
 73e:	1f 4f       	sbci	r17, 0xFF	; 255
 740:	f3 2d       	mov	r31, r3
 742:	ff 76       	andi	r31, 0x6F	; 111
 744:	3f 2e       	mov	r3, r31
 746:	97 ff       	sbrs	r25, 7
 748:	09 c0       	rjmp	.+18     	; 0x75c <vfprintf+0x212>
 74a:	90 95       	com	r25
 74c:	80 95       	com	r24
 74e:	70 95       	com	r23
 750:	61 95       	neg	r22
 752:	7f 4f       	sbci	r23, 0xFF	; 255
 754:	8f 4f       	sbci	r24, 0xFF	; 255
 756:	9f 4f       	sbci	r25, 0xFF	; 255
 758:	f0 68       	ori	r31, 0x80	; 128
 75a:	3f 2e       	mov	r3, r31
 75c:	2a e0       	ldi	r18, 0x0A	; 10
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	a3 01       	movw	r20, r6
 762:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__ultoa_invert>
 766:	88 2e       	mov	r8, r24
 768:	86 18       	sub	r8, r6
 76a:	45 c0       	rjmp	.+138    	; 0x7f6 <vfprintf+0x2ac>
 76c:	85 37       	cpi	r24, 0x75	; 117
 76e:	31 f4       	brne	.+12     	; 0x77c <vfprintf+0x232>
 770:	23 2d       	mov	r18, r3
 772:	2f 7e       	andi	r18, 0xEF	; 239
 774:	b2 2e       	mov	r11, r18
 776:	2a e0       	ldi	r18, 0x0A	; 10
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	25 c0       	rjmp	.+74     	; 0x7c6 <vfprintf+0x27c>
 77c:	93 2d       	mov	r25, r3
 77e:	99 7f       	andi	r25, 0xF9	; 249
 780:	b9 2e       	mov	r11, r25
 782:	8f 36       	cpi	r24, 0x6F	; 111
 784:	c1 f0       	breq	.+48     	; 0x7b6 <vfprintf+0x26c>
 786:	18 f4       	brcc	.+6      	; 0x78e <vfprintf+0x244>
 788:	88 35       	cpi	r24, 0x58	; 88
 78a:	79 f0       	breq	.+30     	; 0x7aa <vfprintf+0x260>
 78c:	b5 c0       	rjmp	.+362    	; 0x8f8 <vfprintf+0x3ae>
 78e:	80 37       	cpi	r24, 0x70	; 112
 790:	19 f0       	breq	.+6      	; 0x798 <vfprintf+0x24e>
 792:	88 37       	cpi	r24, 0x78	; 120
 794:	21 f0       	breq	.+8      	; 0x79e <vfprintf+0x254>
 796:	b0 c0       	rjmp	.+352    	; 0x8f8 <vfprintf+0x3ae>
 798:	e9 2f       	mov	r30, r25
 79a:	e0 61       	ori	r30, 0x10	; 16
 79c:	be 2e       	mov	r11, r30
 79e:	b4 fe       	sbrs	r11, 4
 7a0:	0d c0       	rjmp	.+26     	; 0x7bc <vfprintf+0x272>
 7a2:	fb 2d       	mov	r31, r11
 7a4:	f4 60       	ori	r31, 0x04	; 4
 7a6:	bf 2e       	mov	r11, r31
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <vfprintf+0x272>
 7aa:	34 fe       	sbrs	r3, 4
 7ac:	0a c0       	rjmp	.+20     	; 0x7c2 <vfprintf+0x278>
 7ae:	29 2f       	mov	r18, r25
 7b0:	26 60       	ori	r18, 0x06	; 6
 7b2:	b2 2e       	mov	r11, r18
 7b4:	06 c0       	rjmp	.+12     	; 0x7c2 <vfprintf+0x278>
 7b6:	28 e0       	ldi	r18, 0x08	; 8
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <vfprintf+0x27c>
 7bc:	20 e1       	ldi	r18, 0x10	; 16
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <vfprintf+0x27c>
 7c2:	20 e1       	ldi	r18, 0x10	; 16
 7c4:	32 e0       	ldi	r19, 0x02	; 2
 7c6:	f8 01       	movw	r30, r16
 7c8:	b7 fe       	sbrs	r11, 7
 7ca:	07 c0       	rjmp	.+14     	; 0x7da <vfprintf+0x290>
 7cc:	60 81       	ld	r22, Z
 7ce:	71 81       	ldd	r23, Z+1	; 0x01
 7d0:	82 81       	ldd	r24, Z+2	; 0x02
 7d2:	93 81       	ldd	r25, Z+3	; 0x03
 7d4:	0c 5f       	subi	r16, 0xFC	; 252
 7d6:	1f 4f       	sbci	r17, 0xFF	; 255
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0x29c>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	80 e0       	ldi	r24, 0x00	; 0
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	0e 5f       	subi	r16, 0xFE	; 254
 7e4:	1f 4f       	sbci	r17, 0xFF	; 255
 7e6:	a3 01       	movw	r20, r6
 7e8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__ultoa_invert>
 7ec:	88 2e       	mov	r8, r24
 7ee:	86 18       	sub	r8, r6
 7f0:	fb 2d       	mov	r31, r11
 7f2:	ff 77       	andi	r31, 0x7F	; 127
 7f4:	3f 2e       	mov	r3, r31
 7f6:	36 fe       	sbrs	r3, 6
 7f8:	0d c0       	rjmp	.+26     	; 0x814 <vfprintf+0x2ca>
 7fa:	23 2d       	mov	r18, r3
 7fc:	2e 7f       	andi	r18, 0xFE	; 254
 7fe:	a2 2e       	mov	r10, r18
 800:	89 14       	cp	r8, r9
 802:	58 f4       	brcc	.+22     	; 0x81a <vfprintf+0x2d0>
 804:	34 fe       	sbrs	r3, 4
 806:	0b c0       	rjmp	.+22     	; 0x81e <vfprintf+0x2d4>
 808:	32 fc       	sbrc	r3, 2
 80a:	09 c0       	rjmp	.+18     	; 0x81e <vfprintf+0x2d4>
 80c:	83 2d       	mov	r24, r3
 80e:	8e 7e       	andi	r24, 0xEE	; 238
 810:	a8 2e       	mov	r10, r24
 812:	05 c0       	rjmp	.+10     	; 0x81e <vfprintf+0x2d4>
 814:	b8 2c       	mov	r11, r8
 816:	a3 2c       	mov	r10, r3
 818:	03 c0       	rjmp	.+6      	; 0x820 <vfprintf+0x2d6>
 81a:	b8 2c       	mov	r11, r8
 81c:	01 c0       	rjmp	.+2      	; 0x820 <vfprintf+0x2d6>
 81e:	b9 2c       	mov	r11, r9
 820:	a4 fe       	sbrs	r10, 4
 822:	0f c0       	rjmp	.+30     	; 0x842 <vfprintf+0x2f8>
 824:	fe 01       	movw	r30, r28
 826:	e8 0d       	add	r30, r8
 828:	f1 1d       	adc	r31, r1
 82a:	80 81       	ld	r24, Z
 82c:	80 33       	cpi	r24, 0x30	; 48
 82e:	21 f4       	brne	.+8      	; 0x838 <vfprintf+0x2ee>
 830:	9a 2d       	mov	r25, r10
 832:	99 7e       	andi	r25, 0xE9	; 233
 834:	a9 2e       	mov	r10, r25
 836:	09 c0       	rjmp	.+18     	; 0x84a <vfprintf+0x300>
 838:	a2 fe       	sbrs	r10, 2
 83a:	06 c0       	rjmp	.+12     	; 0x848 <vfprintf+0x2fe>
 83c:	b3 94       	inc	r11
 83e:	b3 94       	inc	r11
 840:	04 c0       	rjmp	.+8      	; 0x84a <vfprintf+0x300>
 842:	8a 2d       	mov	r24, r10
 844:	86 78       	andi	r24, 0x86	; 134
 846:	09 f0       	breq	.+2      	; 0x84a <vfprintf+0x300>
 848:	b3 94       	inc	r11
 84a:	a3 fc       	sbrc	r10, 3
 84c:	11 c0       	rjmp	.+34     	; 0x870 <vfprintf+0x326>
 84e:	a0 fe       	sbrs	r10, 0
 850:	06 c0       	rjmp	.+12     	; 0x85e <vfprintf+0x314>
 852:	b2 14       	cp	r11, r2
 854:	88 f4       	brcc	.+34     	; 0x878 <vfprintf+0x32e>
 856:	28 0c       	add	r2, r8
 858:	92 2c       	mov	r9, r2
 85a:	9b 18       	sub	r9, r11
 85c:	0e c0       	rjmp	.+28     	; 0x87a <vfprintf+0x330>
 85e:	b2 14       	cp	r11, r2
 860:	60 f4       	brcc	.+24     	; 0x87a <vfprintf+0x330>
 862:	b6 01       	movw	r22, r12
 864:	80 e2       	ldi	r24, 0x20	; 32
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 86c:	b3 94       	inc	r11
 86e:	f7 cf       	rjmp	.-18     	; 0x85e <vfprintf+0x314>
 870:	b2 14       	cp	r11, r2
 872:	18 f4       	brcc	.+6      	; 0x87a <vfprintf+0x330>
 874:	2b 18       	sub	r2, r11
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x332>
 878:	98 2c       	mov	r9, r8
 87a:	21 2c       	mov	r2, r1
 87c:	a4 fe       	sbrs	r10, 4
 87e:	10 c0       	rjmp	.+32     	; 0x8a0 <vfprintf+0x356>
 880:	b6 01       	movw	r22, r12
 882:	80 e3       	ldi	r24, 0x30	; 48
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 88a:	a2 fe       	sbrs	r10, 2
 88c:	17 c0       	rjmp	.+46     	; 0x8bc <vfprintf+0x372>
 88e:	a1 fc       	sbrc	r10, 1
 890:	03 c0       	rjmp	.+6      	; 0x898 <vfprintf+0x34e>
 892:	88 e7       	ldi	r24, 0x78	; 120
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	02 c0       	rjmp	.+4      	; 0x89c <vfprintf+0x352>
 898:	88 e5       	ldi	r24, 0x58	; 88
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	b6 01       	movw	r22, r12
 89e:	0c c0       	rjmp	.+24     	; 0x8b8 <vfprintf+0x36e>
 8a0:	8a 2d       	mov	r24, r10
 8a2:	86 78       	andi	r24, 0x86	; 134
 8a4:	59 f0       	breq	.+22     	; 0x8bc <vfprintf+0x372>
 8a6:	a1 fe       	sbrs	r10, 1
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x364>
 8aa:	8b e2       	ldi	r24, 0x2B	; 43
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <vfprintf+0x366>
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	a7 fc       	sbrc	r10, 7
 8b2:	8d e2       	ldi	r24, 0x2D	; 45
 8b4:	b6 01       	movw	r22, r12
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 8bc:	89 14       	cp	r8, r9
 8be:	38 f4       	brcc	.+14     	; 0x8ce <vfprintf+0x384>
 8c0:	b6 01       	movw	r22, r12
 8c2:	80 e3       	ldi	r24, 0x30	; 48
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 8ca:	9a 94       	dec	r9
 8cc:	f7 cf       	rjmp	.-18     	; 0x8bc <vfprintf+0x372>
 8ce:	8a 94       	dec	r8
 8d0:	f3 01       	movw	r30, r6
 8d2:	e8 0d       	add	r30, r8
 8d4:	f1 1d       	adc	r31, r1
 8d6:	80 81       	ld	r24, Z
 8d8:	b6 01       	movw	r22, r12
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 8e0:	81 10       	cpse	r8, r1
 8e2:	f5 cf       	rjmp	.-22     	; 0x8ce <vfprintf+0x384>
 8e4:	22 20       	and	r2, r2
 8e6:	09 f4       	brne	.+2      	; 0x8ea <vfprintf+0x3a0>
 8e8:	42 ce       	rjmp	.-892    	; 0x56e <vfprintf+0x24>
 8ea:	b6 01       	movw	r22, r12
 8ec:	80 e2       	ldi	r24, 0x20	; 32
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 94 9c 04 	call	0x938	; 0x938 <fputc>
 8f4:	2a 94       	dec	r2
 8f6:	f6 cf       	rjmp	.-20     	; 0x8e4 <vfprintf+0x39a>
 8f8:	f6 01       	movw	r30, r12
 8fa:	86 81       	ldd	r24, Z+6	; 0x06
 8fc:	97 81       	ldd	r25, Z+7	; 0x07
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <__stack+0x5>
 900:	8f ef       	ldi	r24, 0xFF	; 255
 902:	9f ef       	ldi	r25, 0xFF	; 255
 904:	2b 96       	adiw	r28, 0x0b	; 11
 906:	e2 e1       	ldi	r30, 0x12	; 18
 908:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__epilogue_restores__>

0000090c <strnlen_P>:
 90c:	fc 01       	movw	r30, r24
 90e:	05 90       	lpm	r0, Z+
 910:	61 50       	subi	r22, 0x01	; 1
 912:	70 40       	sbci	r23, 0x00	; 0
 914:	01 10       	cpse	r0, r1
 916:	d8 f7       	brcc	.-10     	; 0x90e <strnlen_P+0x2>
 918:	80 95       	com	r24
 91a:	90 95       	com	r25
 91c:	8e 0f       	add	r24, r30
 91e:	9f 1f       	adc	r25, r31
 920:	08 95       	ret

00000922 <strnlen>:
 922:	fc 01       	movw	r30, r24
 924:	61 50       	subi	r22, 0x01	; 1
 926:	70 40       	sbci	r23, 0x00	; 0
 928:	01 90       	ld	r0, Z+
 92a:	01 10       	cpse	r0, r1
 92c:	d8 f7       	brcc	.-10     	; 0x924 <strnlen+0x2>
 92e:	80 95       	com	r24
 930:	90 95       	com	r25
 932:	8e 0f       	add	r24, r30
 934:	9f 1f       	adc	r25, r31
 936:	08 95       	ret

00000938 <fputc>:
 938:	0f 93       	push	r16
 93a:	1f 93       	push	r17
 93c:	cf 93       	push	r28
 93e:	df 93       	push	r29
 940:	fb 01       	movw	r30, r22
 942:	23 81       	ldd	r18, Z+3	; 0x03
 944:	21 fd       	sbrc	r18, 1
 946:	03 c0       	rjmp	.+6      	; 0x94e <fputc+0x16>
 948:	8f ef       	ldi	r24, 0xFF	; 255
 94a:	9f ef       	ldi	r25, 0xFF	; 255
 94c:	2c c0       	rjmp	.+88     	; 0x9a6 <fputc+0x6e>
 94e:	22 ff       	sbrs	r18, 2
 950:	16 c0       	rjmp	.+44     	; 0x97e <fputc+0x46>
 952:	46 81       	ldd	r20, Z+6	; 0x06
 954:	57 81       	ldd	r21, Z+7	; 0x07
 956:	24 81       	ldd	r18, Z+4	; 0x04
 958:	35 81       	ldd	r19, Z+5	; 0x05
 95a:	42 17       	cp	r20, r18
 95c:	53 07       	cpc	r21, r19
 95e:	44 f4       	brge	.+16     	; 0x970 <fputc+0x38>
 960:	a0 81       	ld	r26, Z
 962:	b1 81       	ldd	r27, Z+1	; 0x01
 964:	9d 01       	movw	r18, r26
 966:	2f 5f       	subi	r18, 0xFF	; 255
 968:	3f 4f       	sbci	r19, 0xFF	; 255
 96a:	31 83       	std	Z+1, r19	; 0x01
 96c:	20 83       	st	Z, r18
 96e:	8c 93       	st	X, r24
 970:	26 81       	ldd	r18, Z+6	; 0x06
 972:	37 81       	ldd	r19, Z+7	; 0x07
 974:	2f 5f       	subi	r18, 0xFF	; 255
 976:	3f 4f       	sbci	r19, 0xFF	; 255
 978:	37 83       	std	Z+7, r19	; 0x07
 97a:	26 83       	std	Z+6, r18	; 0x06
 97c:	14 c0       	rjmp	.+40     	; 0x9a6 <fputc+0x6e>
 97e:	8b 01       	movw	r16, r22
 980:	ec 01       	movw	r28, r24
 982:	fb 01       	movw	r30, r22
 984:	00 84       	ldd	r0, Z+8	; 0x08
 986:	f1 85       	ldd	r31, Z+9	; 0x09
 988:	e0 2d       	mov	r30, r0
 98a:	09 95       	icall
 98c:	89 2b       	or	r24, r25
 98e:	e1 f6       	brne	.-72     	; 0x948 <fputc+0x10>
 990:	d8 01       	movw	r26, r16
 992:	16 96       	adiw	r26, 0x06	; 6
 994:	8d 91       	ld	r24, X+
 996:	9c 91       	ld	r25, X
 998:	17 97       	sbiw	r26, 0x07	; 7
 99a:	01 96       	adiw	r24, 0x01	; 1
 99c:	17 96       	adiw	r26, 0x07	; 7
 99e:	9c 93       	st	X, r25
 9a0:	8e 93       	st	-X, r24
 9a2:	16 97       	sbiw	r26, 0x06	; 6
 9a4:	ce 01       	movw	r24, r28
 9a6:	df 91       	pop	r29
 9a8:	cf 91       	pop	r28
 9aa:	1f 91       	pop	r17
 9ac:	0f 91       	pop	r16
 9ae:	08 95       	ret

000009b0 <__ultoa_invert>:
 9b0:	fa 01       	movw	r30, r20
 9b2:	aa 27       	eor	r26, r26
 9b4:	28 30       	cpi	r18, 0x08	; 8
 9b6:	51 f1       	breq	.+84     	; 0xa0c <__ultoa_invert+0x5c>
 9b8:	20 31       	cpi	r18, 0x10	; 16
 9ba:	81 f1       	breq	.+96     	; 0xa1c <__ultoa_invert+0x6c>
 9bc:	e8 94       	clt
 9be:	6f 93       	push	r22
 9c0:	6e 7f       	andi	r22, 0xFE	; 254
 9c2:	6e 5f       	subi	r22, 0xFE	; 254
 9c4:	7f 4f       	sbci	r23, 0xFF	; 255
 9c6:	8f 4f       	sbci	r24, 0xFF	; 255
 9c8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ca:	af 4f       	sbci	r26, 0xFF	; 255
 9cc:	b1 e0       	ldi	r27, 0x01	; 1
 9ce:	3e d0       	rcall	.+124    	; 0xa4c <__ultoa_invert+0x9c>
 9d0:	b4 e0       	ldi	r27, 0x04	; 4
 9d2:	3c d0       	rcall	.+120    	; 0xa4c <__ultoa_invert+0x9c>
 9d4:	67 0f       	add	r22, r23
 9d6:	78 1f       	adc	r23, r24
 9d8:	89 1f       	adc	r24, r25
 9da:	9a 1f       	adc	r25, r26
 9dc:	a1 1d       	adc	r26, r1
 9de:	68 0f       	add	r22, r24
 9e0:	79 1f       	adc	r23, r25
 9e2:	8a 1f       	adc	r24, r26
 9e4:	91 1d       	adc	r25, r1
 9e6:	a1 1d       	adc	r26, r1
 9e8:	6a 0f       	add	r22, r26
 9ea:	71 1d       	adc	r23, r1
 9ec:	81 1d       	adc	r24, r1
 9ee:	91 1d       	adc	r25, r1
 9f0:	a1 1d       	adc	r26, r1
 9f2:	20 d0       	rcall	.+64     	; 0xa34 <__ultoa_invert+0x84>
 9f4:	09 f4       	brne	.+2      	; 0x9f8 <__ultoa_invert+0x48>
 9f6:	68 94       	set
 9f8:	3f 91       	pop	r19
 9fa:	2a e0       	ldi	r18, 0x0A	; 10
 9fc:	26 9f       	mul	r18, r22
 9fe:	11 24       	eor	r1, r1
 a00:	30 19       	sub	r19, r0
 a02:	30 5d       	subi	r19, 0xD0	; 208
 a04:	31 93       	st	Z+, r19
 a06:	de f6       	brtc	.-74     	; 0x9be <__ultoa_invert+0xe>
 a08:	cf 01       	movw	r24, r30
 a0a:	08 95       	ret
 a0c:	46 2f       	mov	r20, r22
 a0e:	47 70       	andi	r20, 0x07	; 7
 a10:	40 5d       	subi	r20, 0xD0	; 208
 a12:	41 93       	st	Z+, r20
 a14:	b3 e0       	ldi	r27, 0x03	; 3
 a16:	0f d0       	rcall	.+30     	; 0xa36 <__ultoa_invert+0x86>
 a18:	c9 f7       	brne	.-14     	; 0xa0c <__ultoa_invert+0x5c>
 a1a:	f6 cf       	rjmp	.-20     	; 0xa08 <__ultoa_invert+0x58>
 a1c:	46 2f       	mov	r20, r22
 a1e:	4f 70       	andi	r20, 0x0F	; 15
 a20:	40 5d       	subi	r20, 0xD0	; 208
 a22:	4a 33       	cpi	r20, 0x3A	; 58
 a24:	18 f0       	brcs	.+6      	; 0xa2c <__ultoa_invert+0x7c>
 a26:	49 5d       	subi	r20, 0xD9	; 217
 a28:	31 fd       	sbrc	r19, 1
 a2a:	40 52       	subi	r20, 0x20	; 32
 a2c:	41 93       	st	Z+, r20
 a2e:	02 d0       	rcall	.+4      	; 0xa34 <__ultoa_invert+0x84>
 a30:	a9 f7       	brne	.-22     	; 0xa1c <__ultoa_invert+0x6c>
 a32:	ea cf       	rjmp	.-44     	; 0xa08 <__ultoa_invert+0x58>
 a34:	b4 e0       	ldi	r27, 0x04	; 4
 a36:	a6 95       	lsr	r26
 a38:	97 95       	ror	r25
 a3a:	87 95       	ror	r24
 a3c:	77 95       	ror	r23
 a3e:	67 95       	ror	r22
 a40:	ba 95       	dec	r27
 a42:	c9 f7       	brne	.-14     	; 0xa36 <__ultoa_invert+0x86>
 a44:	00 97       	sbiw	r24, 0x00	; 0
 a46:	61 05       	cpc	r22, r1
 a48:	71 05       	cpc	r23, r1
 a4a:	08 95       	ret
 a4c:	9b 01       	movw	r18, r22
 a4e:	ac 01       	movw	r20, r24
 a50:	0a 2e       	mov	r0, r26
 a52:	06 94       	lsr	r0
 a54:	57 95       	ror	r21
 a56:	47 95       	ror	r20
 a58:	37 95       	ror	r19
 a5a:	27 95       	ror	r18
 a5c:	ba 95       	dec	r27
 a5e:	c9 f7       	brne	.-14     	; 0xa52 <__ultoa_invert+0xa2>
 a60:	62 0f       	add	r22, r18
 a62:	73 1f       	adc	r23, r19
 a64:	84 1f       	adc	r24, r20
 a66:	95 1f       	adc	r25, r21
 a68:	a0 1d       	adc	r26, r0
 a6a:	08 95       	ret

00000a6c <__prologue_saves__>:
 a6c:	2f 92       	push	r2
 a6e:	3f 92       	push	r3
 a70:	4f 92       	push	r4
 a72:	5f 92       	push	r5
 a74:	6f 92       	push	r6
 a76:	7f 92       	push	r7
 a78:	8f 92       	push	r8
 a7a:	9f 92       	push	r9
 a7c:	af 92       	push	r10
 a7e:	bf 92       	push	r11
 a80:	cf 92       	push	r12
 a82:	df 92       	push	r13
 a84:	ef 92       	push	r14
 a86:	ff 92       	push	r15
 a88:	0f 93       	push	r16
 a8a:	1f 93       	push	r17
 a8c:	cf 93       	push	r28
 a8e:	df 93       	push	r29
 a90:	cd b7       	in	r28, 0x3d	; 61
 a92:	de b7       	in	r29, 0x3e	; 62
 a94:	ca 1b       	sub	r28, r26
 a96:	db 0b       	sbc	r29, r27
 a98:	0f b6       	in	r0, 0x3f	; 63
 a9a:	f8 94       	cli
 a9c:	de bf       	out	0x3e, r29	; 62
 a9e:	0f be       	out	0x3f, r0	; 63
 aa0:	cd bf       	out	0x3d, r28	; 61
 aa2:	09 94       	ijmp

00000aa4 <__epilogue_restores__>:
 aa4:	2a 88       	ldd	r2, Y+18	; 0x12
 aa6:	39 88       	ldd	r3, Y+17	; 0x11
 aa8:	48 88       	ldd	r4, Y+16	; 0x10
 aaa:	5f 84       	ldd	r5, Y+15	; 0x0f
 aac:	6e 84       	ldd	r6, Y+14	; 0x0e
 aae:	7d 84       	ldd	r7, Y+13	; 0x0d
 ab0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ab2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ab4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ab6:	b9 84       	ldd	r11, Y+9	; 0x09
 ab8:	c8 84       	ldd	r12, Y+8	; 0x08
 aba:	df 80       	ldd	r13, Y+7	; 0x07
 abc:	ee 80       	ldd	r14, Y+6	; 0x06
 abe:	fd 80       	ldd	r15, Y+5	; 0x05
 ac0:	0c 81       	ldd	r16, Y+4	; 0x04
 ac2:	1b 81       	ldd	r17, Y+3	; 0x03
 ac4:	aa 81       	ldd	r26, Y+2	; 0x02
 ac6:	b9 81       	ldd	r27, Y+1	; 0x01
 ac8:	ce 0f       	add	r28, r30
 aca:	d1 1d       	adc	r29, r1
 acc:	0f b6       	in	r0, 0x3f	; 63
 ace:	f8 94       	cli
 ad0:	de bf       	out	0x3e, r29	; 62
 ad2:	0f be       	out	0x3f, r0	; 63
 ad4:	cd bf       	out	0x3d, r28	; 61
 ad6:	ed 01       	movw	r28, r26
 ad8:	08 95       	ret

00000ada <_exit>:
 ada:	f8 94       	cli

00000adc <__stop_program>:
 adc:	ff cf       	rjmp	.-2      	; 0xadc <__stop_program>
